{"version":3,"sources":["webpack:///./src/app/services/board/board.service.ts","webpack:///./src/app/services/member/member.service.ts","webpack:///./src/app/services/member/member.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders,HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Board } from './board';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardService {\n\n  constructor(private http:HttpClient) { }\n\n  // addBoard\n  addBoard(board:Board) {\n    \n    var url = \"http://localhost:8090/addBoard\";\n\n    const httpOptions = {\n      headers: new HttpHeaders(\n        { 'Content-Type':'application/json'\n        ,'Access-Control-Allow-Origin':'*' \n        }\n      )\n    };\n    return this.http.post(url, board, httpOptions);\n  }\n\n  // listBoard\n  listBoard():Observable<Board[]> {\n    var url = \"http://localhost:8090/listBoard\";\n\n    return this.http.get(url).pipe(map(res => {\n      console.log(res);\n      return res as Board[];\n    }));\n  }\n\n  // getBoard\n  getBoard(num):Observable<Board> {\n    var url = `http://localhost:8090/getBoard/${num}`;\n\n    return this.http.get(url).pipe(map(res => {\n      console.log(res);\n      return res as Board;\n    }));\n  }\n\n  // addBoard\n  addCrawlingBoard(board:Board) {\n    \n    var url = \"http://localhost:8090/addCrawlingBoard\";\n\n    const httpOptions = {\n      headers: new HttpHeaders(\n        { 'Content-Type':'application/json'\n        ,'Access-Control-Allow-Origin':'*' \n        }\n      )\n    };\n    return this.http.post(url, board, httpOptions);\n  }\n\n  crawlingBoard():Observable<Board[]> {\n    var url = \"http://localhost:8090/crawlingBoard\";\n\n    return this.http.get(url).pipe(map(res => {\n      console.log(res);\n      return res as Board[];\n    }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders,HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Member, Login } from './member';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MemberService {\n\n  constructor(private http:HttpClient) { }\n\n  // add member\n  add(member:Member) {\n    \n    var url = \"http://localhost:8090/addMember\";\n\n    const httpOptions = {\n      headers: new HttpHeaders(\n        { 'Content-Type':'application/json'\n        ,'Access-Control-Allow-Origin':'*' \n        }\n      )\n    };\n\n    return this.http.post(url, member, httpOptions);\n  }\n\n  // login\n  login(login:Login) {\n    var url = \"http://localhost:8090/login\";\n\n    const httpOptions = {\n      headers: new HttpHeaders(\n        { 'Content-Type':'application/json'\n        ,'Access-Control-Allow-Origin':'*' \n        }\n      )\n    };\n\n    return this.http.post(url, login, httpOptions);\n  }\n}\n","export class Member {\n    constructor(public email:string,\n                public full_name:string,\n                public passwd:string) {\n\n    }\n}\n\nexport class Login {\n    constructor(public email:string,\n                public passwd:string) {\n\n    }\n}"],"sourceRoot":""}