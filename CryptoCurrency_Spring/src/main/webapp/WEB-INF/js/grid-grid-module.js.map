{"version":3,"sources":["webpack:///./src/app/layout/grid/grid-routing.module.ts","webpack:///./src/app/layout/grid/grid.component.html","webpack:///./src/app/layout/grid/grid.component.scss","webpack:///./src/app/layout/grid/grid.component.ts","webpack:///./src/app/layout/grid/grid.module.ts","webpack:///./src/app/services/currency/currency.component.html","webpack:///./src/app/services/currency/currency.component.scss","webpack:///./src/app/services/currency/currency.component.ts"],"names":[],"mappings":"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","file":"grid-grid-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GridComponent } from './grid.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: GridComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GridRoutingModule { }\n","module.exports = \"<app-currency></app-currency>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\n\n@Component({\n    selector: 'app-grid',\n    templateUrl: './grid.component.html',\n    styleUrls: ['./grid.component.scss'],\n    animations: [routerTransition()]\n})\nexport class GridComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GridRoutingModule } from './grid-routing.module';\nimport { GridComponent } from './grid.component';\nimport { PageHeaderModule } from './../../shared';\nimport { CurrencyComponent } from '../../services/currency/currency.component';\n\n@NgModule({\n    imports: [CommonModule, GridRoutingModule, PageHeaderModule],\n    declarations: [GridComponent, CurrencyComponent]\n})\nexport class GridModule {}\n","module.exports = \"<button (click)=\\\"start()\\\">START</button>\\n<button (click)=\\\"stop()\\\">STOP</button>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { CurrencyService } from './currency.service';\nimport { Bithumb, Upbit, CurrencyUtil } from './currency';\n\n@Component({\n  selector: 'app-currency',\n  templateUrl: './currency.component.html',\n  styleUrls: ['./currency.component.scss']\n})\nexport class CurrencyComponent implements OnInit {\n\n  constructor(private service:CurrencyService) { }\n\n  // url\n  bithumb_ticker:string = 'https://api.bithumb.com/public/ticker/';\n  upbit_ticker:string = 'https://api.upbit.com/v1/ticker?markets=';\n  currencyUtil:CurrencyUtil = new CurrencyUtil();;\n\n  // request setInterval function\n  intervalFunc;\n\n  test:number = 0;\n  ngOnInit() {\n    \n  }\n\n  start() {\n    console.log('start');\n    var _this = this;\n    this.intervalFunc = setInterval(function() {\n      _this.test++;\n      console.log(_this.test);\n      _this.currencyUtil.currency.forEach(function(ele){\n        // getBithumb\n        _this.service.getBithumb(_this.bithumb_ticker, ele)\n        .subscribe(res => { \n          console.log('_this.service.getBithumb', res)\n          // addBithumb\n          _this.service.addBithumb(res).subscribe(res => { \n            console.log(res);\n          }, error => { console.log(error)});\n          // end addBithumb\n        }, error => {\n          console.log(error)\n        });\n        // end getBithumb\n        // getUpbit\n        _this.service.getUpbit(_this.upbit_ticker, 'KRW-' + ele)\n        .subscribe(res => {\n          console.log('_this.service.getUpbit', res)\n          // addUpbit\n          _this.service.addUpbit(res).subscribe(res => { \n            console.log(res);\n          }, error => { console.log(error)});\n          // end addUpbit\n        }, error => {\n          console.log(error)\n        });\n        // end getUpbit\n      });\n\n    }, 2 * 60 * 1000); // 2분마다 요청\n    // }, 1000);\n  }\n  \n  stop() {\n    console.log('stop');\n    clearInterval(this.intervalFunc);\n  }\n\n}\n"],"sourceRoot":""}